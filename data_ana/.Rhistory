#             std.alpha = alpha_nopca(get.frame(cbind(t1, t2, t3, t4, t5, t6,
#                                                     t7, t8, t9, t10, t11, t12
#                                                     # t13, t14, t15, t16
#                                                     )),
#                               na.rm=TRUE, delete=TRUE,
#                               check.keys=FALSE)$total$std.alpha)
r_refs(file = "simpimp.bib")
View(d)
summary(d)
unique(d_sample1_raw$subid)
list_info
View(list_info)
d_sample1_raw <- read.csv(here("data_ana/data","sample1.csv")) %>%
mutate(sample = "original")
list_info <- read.csv(here("data_ana/data","list_info.csv")) %>%
distinct(subid, .keep_all=T)
order <- read.csv(here("data_ana/data","trial_info.csv"))
d_sample1_raw2 <- left_join(d_sample1_raw, list_info) %>%
left_join(., order)
d_sample1_raw1 <- left_join(d_sample1_raw, order)
unique(d_sample1_raw2)
unique(d_sample1_raw2$subid)
unique(d_sample1_raw1$subid)
d_sample1_external <- d_sample1_raw1 %>%
filter(trial_type != "practice",
age_group != "1",
age_group != "6",
english > 3)
# filter by internal (data) criteria
d_sample1_internalDrop <- d_sample1_raw1 %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 10) %>%
droplevels()
d_sample1_final <- d_sample1_external %>%
filter(!subid %in% d_sample1_internalDrop$subid) %>%
droplevels()
d_sample1_external2 <- d_sample1_raw2 %>%
filter(trial_type != "practice",
age_group != "1",
age_group != "6",
english > 3)
# filter by internal (data) criteria
d_sample1_internalDrop2 <- d_sample1_raw2 %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 10) %>%
droplevels()
d_sample1_final2 <- d_sample1_external2 %>%
filter(!subid %in% d_sample1_internalDrop$subid) %>%
droplevels()
unique(d_sample1_final2)
unique(d_sample1_final2$ssubid)
unique(d_sample1_final2$subid)
unique(d_sample1_final$subid)
d_sample1_final1 <- d_sample1_final
library("papaja"); library(xtable); library(tidyverse)
library(langcog)
library(here)
library(ggthemes)
library(brms)
library(lme4)
# rm(list=ls())
knitr::opts_chunk$set(                      echo=FALSE, warning=FALSE, cache=T, message=FALSE, sanitize = T)
# Seed for random number generation
set.seed(42)
d_sample1_raw <- read.csv(here("data_ana/data","sample1.csv")) %>%
mutate(sample = "original")
list_info <- read.csv(here("data_ana/data","list_info.csv")) %>%
distinct(subid, .keep_all=T)
order <- read.csv(here("data_ana/data","trial_info.csv"))
d_sample1_raw <- left_join(d_sample1_raw, list_info) %>%
left_join(., order)
# filter by external criteria
d_sample1_external <- d_sample1_raw %>%
filter(trial_type != "practice",
age_group != "1",
age_group != "6",
english > 3)
# filter by internal (data) criteria
d_sample1_internalDrop <- d_sample1_raw %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 10) %>%
droplevels()
d_sample1_final <- d_sample1_external %>%
filter(!subid %in% d_sample1_internalDrop$subid) %>%
droplevels()
d_sample2_raw <- read.csv(here("data_ana/data","sample2.csv")) %>%
mutate(sample = "replication",
site = "cdm")
log <- read.csv(here("data_ana/data","log.csv")) %>%
mutate(English = as.numeric(as.character(fct_recode(English,
"10" = "five-ten",
"95" = "90-95")))) %>%
rename(english = English)
order <- read.csv(here("data_ana/data","trial_info.csv"))
d_sample2_raw <- left_join(d_sample2_raw, order) %>%
left_join(., log) %>%
distinct(subid, trial_num, .keep_all=T)
d_sample2_external <- d_sample2_raw %>%
filter(keep_drop == "keep",
!is.na(keep_drop),
consent == "Y",
as.numeric(as.character(english)) > 70,
age_group %in% c("2", "3", "4"),
!is.na(age)) %>%
filter(trial_type != "practice")
d_sample2_internalDrop <- d_sample2_raw %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 10) %>%
droplevels()
d_sample2_final <- d_sample2_external %>%
filter(!subid %in% d_sample2_internalDrop$subid) %>%
droplevels()
# check counterbalancing
# d_sample2_final %>%
#   group_by(age_group, list, subid) %>%
#   summarise(number = n()) %>%
#   group_by(age_group, list) %>%
#   summarise(number = n())
d <- rbind(d_sample1_final,
d_sample2_final %>%
select(colnames(d_sample1_final))) %>%
select(-english) %>%
mutate(correct = as.numeric(as.character(fct_recode(correct,
"0" = "N",
"1" = "Y")))) %>%
mutate(item_rel = case_when(
item_num == "1vs1" | item_num == "2vs1" ~ "fewer",
item_num == "2vs2" | item_num == "3vs1" ~ "more"
)) %>%
mutate(age_group = as.numeric(as.character(age_group)))
top_bound <- mean(log(d$rt)) + 3*sd(log(d$rt))
bottom_bound <- mean(log(d$rt)) - 3*sd(log(d$rt))
rt_filter <- d %>%
mutate(pass = case_when(
log(rt) < top_bound & log(rt) > bottom_bound ~ "pass",
TRUE ~ "fail")) %>%
group_by(pass) %>%
summarise(n = n()) %>%
spread(pass, n) %>%
mutate(prop_fail = 100*fail/(fail+pass))
d <- d %>%
filter(log(rt) < top_bound,
log(rt) > bottom_bound) %>%
mutate(subid = factor(subid))
write_csv(d, path = here("data_ana/data","final_analyzed_data.csv"))
d %>% filter(sample == "original") %>% unique(.$subid)
filter(d, sample == "original")$subid)
filter(d, sample == "original")$subid
unique(filter(d, sample == "original")$subid)
unique(d_sample1_final$subid)
d_sample1_raw <- read.csv(here("data_ana/data","sample1.csv")) %>%
mutate(sample = "original")
list_info <- read.csv(here("data_ana/data","list_info.csv")) %>%
distinct(subid, .keep_all=T)
order <- read.csv(here("data_ana/data","trial_info.csv"))
d_sample1_raw <- left_join(d_sample1_raw, list_info) %>%
left_join(., order)
# filter by external criteria
d_sample1_external <- d_sample1_raw %>%
filter(trial_type != "practice",
age_group != "1",
age_group != "6",
english > 3)
# filter by internal (data) criteria
d_sample1_internalDrop <- d_sample1_raw %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 10) %>%
droplevels()
d_sample1_final <- d_sample1_external %>%
filter(!subid %in% d_sample1_internalDrop$subid) %>%
droplevels()
unique(d_sample1_final$subid)
unique(d_sample1_raw$subid)
unique(d_sample1_external$subid)
d_sample1_internalDrop
d_sample1_raw2 <- left_join(d_sample1_raw, order)
d_sample1_raw <- read.csv(here("data_ana/data","sample1.csv")) %>%
mutate(sample = "original")
list_info <- read.csv(here("data_ana/data","list_info.csv")) %>%
distinct(subid, .keep_all=T)
order <- read.csv(here("data_ana/data","trial_info.csv"))
d_sample1_raw2 <- left_join(d_sample1_raw, order)
unique(d_sample_raw2$subid)
unique(d_sample1_raw2$subid)
# filter by external criteria
d_sample1_external <- d_sample1_raw2 %>%
filter(trial_type != "practice",
age_group != "1",
age_group != "6",
english > 3)
unique(d_sample1_external)
unique(d_sample1_external$ssubid)
unique(d_sample1_external$subid)
# filter by internal (data) criteria
d_sample1_internalDrop <- d_sample1_raw2 %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 10) %>%
droplevels()
d_sample1_internalDrop
library("papaja"); library(xtable); library(tidyverse)
library(langcog)
library(here)
library(ggthemes)
library(brms)
library(lme4)
# rm(list=ls())
knitr::opts_chunk$set(                      echo=FALSE, warning=FALSE, cache=T, message=FALSE, sanitize = T)
# Seed for random number generation
set.seed(42)
d_sample1_raw <- read.csv(here("data_ana/data","sample1.csv")) %>%
mutate(sample = "original")
list_info <- read.csv(here("data_ana/data","list_info.csv")) %>%
distinct(subid, .keep_all=T)
order <- read.csv(here("data_ana/data","trial_info.csv"))
d_sample1_raw <- left_join(d_sample1_raw, list_info) %>%
left_join(., order)
d_sample1_raw2 <- left_join(d_sample1_raw, order)
# filter by external criteria
d_sample1_external <- d_sample1_raw2 %>%
filter(trial_type != "practice",
age_group != "1",
age_group != "6",
english > 3)
# filter by internal (data) criteria
d_sample1_internalDrop <- d_sample1_raw2 %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 8) %>%
droplevels()
d_sample1_final <- d_sample1_external %>%
filter(!subid %in% d_sample1_internalDrop$subid) %>%
droplevels()
d_sample2_raw <- read.csv(here("data_ana/data","sample2.csv")) %>%
mutate(sample = "replication",
site = "cdm")
log <- read.csv(here("data_ana/data","log.csv")) %>%
mutate(English = as.numeric(as.character(fct_recode(English,
"10" = "five-ten",
"95" = "90-95")))) %>%
rename(english = English)
order <- read.csv(here("data_ana/data","trial_info.csv"))
d_sample2_raw <- left_join(d_sample2_raw, order) %>%
left_join(., log) %>%
distinct(subid, trial_num, .keep_all=T)
d_sample2_external <- d_sample2_raw %>%
filter(keep_drop == "keep",
!is.na(keep_drop),
consent == "Y",
as.numeric(as.character(english)) > 70,
age_group %in% c("2", "3", "4"),
!is.na(age)) %>%
filter(trial_type != "practice")
d_sample2_internalDrop <- d_sample2_raw %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 10) %>%
droplevels()
d_sample2_final <- d_sample2_external %>%
filter(!subid %in% d_sample2_internalDrop$subid) %>%
droplevels()
# check counterbalancing
# d_sample2_final %>%
#   group_by(age_group, list, subid) %>%
#   summarise(number = n()) %>%
#   group_by(age_group, list) %>%
#   summarise(number = n())
d <- rbind(d_sample1_final,
d_sample2_final %>%
select(colnames(d_sample1_final))) %>%
select(-english) %>%
mutate(correct = as.numeric(as.character(fct_recode(correct,
"0" = "N",
"1" = "Y")))) %>%
mutate(item_rel = case_when(
item_num == "1vs1" | item_num == "2vs1" ~ "fewer",
item_num == "2vs2" | item_num == "3vs1" ~ "more"
)) %>%
mutate(age_group = as.numeric(as.character(age_group)))
top_bound <- mean(log(d$rt)) + 3*sd(log(d$rt))
bottom_bound <- mean(log(d$rt)) - 3*sd(log(d$rt))
rt_filter <- d %>%
mutate(pass = case_when(
log(rt) < top_bound & log(rt) > bottom_bound ~ "pass",
TRUE ~ "fail")) %>%
group_by(pass) %>%
summarise(n = n()) %>%
spread(pass, n) %>%
mutate(prop_fail = 100*fail/(fail+pass))
d <- d %>%
filter(log(rt) < top_bound,
log(rt) > bottom_bound) %>%
mutate(subid = factor(subid))
write_csv(d, path = here("data_ana/data","final_analyzed_data.csv"))
# total number of participants
d_part1 <-  d %>%
group_by(sample, age_group, subid) %>%
summarise(n=n()) %>%
group_by(sample, age_group) %>%
summarise(total=n())
#SD
d_part2 <- d %>%
group_by(sample, age_group, age, subid) %>%
summarise(n=n()) %>%
group_by(sample, age_group) %>%
summarise(Mean = round(mean(age),2),
SD=round(sd(age),2))
# girls
d_part3 <- d %>%
group_by(sample, age_group, sex, subid) %>%
summarise(n=n()) %>%
group_by(sample, age_group, sex) %>%
summarise(n=n()) %>%
spread(sex, n) %>%
mutate(Girls = round(F/(F+M) * 100,1)) %>%
select(sample, age_group, Girls)
d_table1 <- left_join(d_part1, d_part2) %>%
left_join(., d_part3) %>%
mutate(age_group = as.character(age_group),
total = as.character(total))%>%
rename(Sample = sample,
"Age bin" = age_group,
"Mean (years)" = Mean,
"SD (years)" = SD,
"Number of participants" = total,
"% Girls" = Girls
)
apa_table(d_table1, caption = "Demographic information of participants in the original and replication samples.")
rt_filter
d %>%
mutate(pass = case_when(
log(rt) < top_bound & log(rt) > bottom_bound ~ "pass",
TRUE ~ "fail"))
d %>%
mutate(pass = case_when(
log(rt) < top_bound & log(rt) > bottom_bound ~ "pass",
TRUE ~ "fail")) %>% filter(pass == "fail")
d %>%
mutate(pass = case_when(
log(rt) < top_bound & log(rt) > bottom_bound ~ "pass",
TRUE ~ "fail")) %>% filter(pass != "pass")
top_bound <- mean(log(d$rt)) + 3*sd(log(d$rt))
bottom_bound <- mean(log(d$rt)) - 3*sd(log(d$rt))
rt_filter <- d %>%
mutate(pass = case_when(
log(rt) < top_bound & log(rt) > bottom_bound ~ "pass",
TRUE ~ "fail")) %>%
group_by(pass) %>%
summarise(n = n()) %>%
spread(pass, n) %>%
mutate(prop_fail = 100*fail/(fail+pass))
library("papaja"); library(xtable); library(tidyverse)
library(langcog)
library(here)
library(ggthemes)
library(brms)
library(lme4)
# rm(list=ls())
knitr::opts_chunk$set(                      echo=FALSE, warning=FALSE, cache=T, message=FALSE, sanitize = T)
# Seed for random number generation
set.seed(42)
d_sample1_raw <- read.csv(here("data_ana/data","sample1.csv")) %>%
mutate(sample = "original")
list_info <- read.csv(here("data_ana/data","list_info.csv")) %>%
distinct(subid, .keep_all=T)
order <- read.csv(here("data_ana/data","trial_info.csv"))
d_sample1_raw <- left_join(d_sample1_raw, list_info) %>%
left_join(., order)
d_sample1_raw2 <- left_join(d_sample1_raw, order)
# filter by external criteria
d_sample1_external <- d_sample1_raw2 %>%
filter(trial_type != "practice",
age_group != "1",
age_group != "6",
english > 3)
# filter by internal (data) criteria
d_sample1_internalDrop <- d_sample1_raw2 %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 10) %>%
droplevels()
d_sample1_final <- d_sample1_external %>%
filter(!subid %in% d_sample1_internalDrop$subid) %>%
droplevels()
d_sample2_raw <- read.csv(here("data_ana/data","sample2.csv")) %>%
mutate(sample = "replication",
site = "cdm")
log <- read.csv(here("data_ana/data","log.csv")) %>%
mutate(English = as.numeric(as.character(fct_recode(English,
"10" = "five-ten",
"95" = "90-95")))) %>%
rename(english = English)
order <- read.csv(here("data_ana/data","trial_info.csv"))
d_sample2_raw <- left_join(d_sample2_raw, order) %>%
left_join(., log) %>%
distinct(subid, trial_num, .keep_all=T)
d_sample2_external <- d_sample2_raw %>%
filter(keep_drop == "keep",
!is.na(keep_drop),
consent == "Y",
as.numeric(as.character(english)) > 70,
age_group %in% c("2", "3", "4"),
!is.na(age)) %>%
filter(trial_type != "practice")
d_sample2_internalDrop <- d_sample2_raw %>%
group_by(subid) %>%
summarise(nrow=n()) %>%
filter(nrow < 10) %>%
droplevels()
d_sample2_final <- d_sample2_external %>%
filter(!subid %in% d_sample2_internalDrop$subid) %>%
droplevels()
# check counterbalancing
# d_sample2_final %>%
#   group_by(age_group, list, subid) %>%
#   summarise(number = n()) %>%
#   group_by(age_group, list) %>%
#   summarise(number = n())
d <- rbind(d_sample1_final,
d_sample2_final %>%
select(colnames(d_sample1_final))) %>%
select(-english) %>%
mutate(correct = as.numeric(as.character(fct_recode(correct,
"0" = "N",
"1" = "Y")))) %>%
mutate(item_rel = case_when(
item_num == "1vs1" | item_num == "2vs1" ~ "fewer",
item_num == "2vs2" | item_num == "3vs1" ~ "more"
)) %>%
mutate(age_group = as.numeric(as.character(age_group)))
top_bound <- mean(log(d$rt)) + 3*sd(log(d$rt))
bottom_bound <- mean(log(d$rt)) - 3*sd(log(d$rt))
rt_filter <- d %>%
mutate(pass = case_when(
log(rt) < top_bound & log(rt) > bottom_bound ~ "pass",
TRUE ~ "fail")) %>%
group_by(pass) %>%
summarise(n = n()) %>%
spread(pass, n) %>%
mutate(prop_fail = 100*fail/(fail+pass))
d %>%
mutate(pass = case_when(
log(rt) < top_bound & log(rt) > bottom_bound ~ "pass",
TRUE ~ "fail")) %>% filter(pass == "fail")
top_bound
bottom_bound
View(d)
d %>% count(subid)
View(d %>% count(subid))
unique(d$sample)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(langcog)
library(here)
library(ggthemes)
library(brms)
library(lme4)
brms_acc_rep <- brm(data=d %>%
filter(sample == "replication") %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ age * trial_type * item_rel + (trial_type + item_rel | subid) + (age + trial_type + item_rel | item), family="bernoulli", iter=3000, control = list(adapt_delta = 0.99, max_treedepth = 15))
summary(brms_acc_rep)
save(brms_acc_rep, file = here("data_ana", "simpimp_brms_acc_sample2.Rds"))
brms_acc_orig <- brm(data=d %>%
filter(sample == "original") %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ age * trial_type * item_rel + (trial_type + item_rel | subid) + (age + trial_type + item_rel | item), family="bernoulli", iter=3000, control = list(adapt_delta = 0.99, max_treedepth = 15))
summary(brms_acc_orig)
save(brms_acc_orig, file = here("data_ana", "simpimp_brms_acc_sample1.Rds"))
lmer_acc <- glmer(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ sample + age * trial_type * item_rel + (1 | subid), family="binomial")
summary(lmer_acc)
lmer_acc <- glmer(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ age * trial_type * item_rel + (1 | sample), family="binomial")
summary(lmer_acc)
lmer_acc <- glmer(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ age * trial_type * item_rel + (1 | subid), family="binomial")
lmer_acc <- glmer(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ age * trial_type * item_rel + (1 | subid), family="binomial")
lmer_acc <- glmer(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ age * trial_type * item_rel + (1 | item), family="binomial")
summary(lmer_acc)
unique(d$subid)
brms_acc <- brm(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ age * trial_type * item_rel + (trial_type + item_rel | subid) + (trial_type + item_rel | item) + (trial_type + item_rel | sample), family="bernoulli", iter=3000, control = list(adapt_delta = 0.99, max_treedepth = 15))
summary(brms_acc)
save(brms_acc, file = here("data_ana", "simpimp_brms_acc_no_age_rand.Rds"))
brms_acc <- brm(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ age * trial_type * item_rel + (trial_type + item_rel | subid) + (age + trial_type + item_rel | item) + (age + trial_type + item_rel | sample), family="bernoulli", iter=3000, control = list(adapt_delta = 0.99, max_treedepth = 15))
summary(brms_acc)
save(brms_acc, file = here("data_ana", "simpimp_brms_acc2.Rds"))
