xlab("Age (years)") +
ylim(c(0, 1)) +
theme_few() +
theme(text = element_text(size=14),
legend.position = "top") +
scale_color_solarized() +
guides(col=guide_legend(title="Number of features"),
size = guide_legend(title="Number of participants"))
d_acc <- d %>%
group_by(sample, age_group, trial_type, item_rel, subid) %>%
summarise(correct = mean(correct)) %>%
group_by(sample, age_group, trial_type, item_rel) %>%
multi_boot_standard(col = "correct") %>%
mutate(correct = mean) %>%
select(-mean) %>%
ungroup() %>%
mutate(sample = as.factor(sample))
p1 <- ggplot(d_acc, aes(x = age_group, y = correct, group = interaction(item_rel, sample), col = item_rel, linetype=sample)) +
geom_line() +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .1)) +
facet_grid(. ~ trial_type) +
#   guides(colour=guide_legend(title="Number of features")) +
# guides(colour=FALSE) +
geom_hline(yintercept=.50,lty=4) +
ylab("Accuracy") +
xlab("Age (years)") +
ylim(c(0, 1)) +
theme(text = element_text(size=14)) +
theme_few() +
scale_color_solarized()
p1
d_acc2 <- d %>%
group_by(sample, trial_type, item_rel, age, subid) %>%
summarise(correct = mean(correct))
p1_3 <- ggplot(d_acc2, aes(x = age, y = correct,
group = interaction(item_rel, sample),
col = item_rel, linetype = factor(sample))) +
geom_jitter() +
geom_smooth(span= 1.5, se=F) +
facet_grid(. ~ trial_type) +
#   guides(colour=guide_legend(title="Number of features")) +
# guides(colour=FALSE) +
geom_hline(yintercept=.50,lty=4) +
ylab("Accuracy") +
xlab("Age (years)") +
ylim(c(0, 1)) +
theme(text = element_text(size=14)) +
theme_few() +
scale_color_solarized()
p1_3
d_acc_ms <- d %>%
mutate(sample = as.factor(sample),
age_group_small = as.numeric(as.character(cut(age, seq(2,6,.5),
labels = seq(2,5.5,.5)+.25)))) %>%
group_by(sample, age_group_small, trial_type, item_rel, subid) %>%
summarise(correct = mean(correct))
d_acc <- d_acc_ms %>%
group_by(sample, age_group_small, trial_type, item_rel) %>%
multi_boot_standard(col = "correct") %>%
mutate(correct = mean) %>%
select(-mean) %>%
ungroup() %>%
left_join(d_acc_ms %>%
group_by(sample, age_group_small, trial_type, item_rel) %>%
summarise(n = n()))
ggplot(d_acc %>%
mutate(trial_type = fct_recode(trial_type,
"control-single" = "control_single",
"control-double" = "control_double")),
aes(x = age_group_small, y = correct,
group = item_rel, col = item_rel)) +
# geom_line() +
geom_smooth(span= 1, aes(weight = n), se = FALSE) +
# geom_point(aes(size = n), alpha = .5) +
# geom_jitter(aes(data=d_acc2, x=age_group_small, y=correct), alpha=.4) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .1)) +
facet_grid(sample ~ trial_type, labeller = labeller(sample = label_both)) +
#   guides(colour=guide_legend(title="Number of features")) +
# guides(colour=FALSE) +
geom_hline(yintercept=.50,lty=2) +
ylab("Accuracy") +
xlab("Age (years)") +
ylim(c(0, 1)) +
xlim(c(2, 5.8)) +
theme_few() +
theme(text = element_text(size=14),
legend.position = "bottom") +
scale_color_solarized() +
guides(col=guide_legend(title="Number of features"),
size = guide_legend(title="Number of participants"))
ggplot(d_acc %>%
mutate(trial_type = fct_recode(trial_type,
"control-single" = "control_single",
"control-double" = "control_double")),
aes(x = age_group_small, y = correct,
group = interaction(item_rel, sample), col = item_rel, linetype=sample)) +
geom_smooth(span= 1, aes(weight = n), se = FALSE) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .1)) +
facet_grid(. ~ trial_type) +
geom_hline(yintercept=.50,lty=2) +
ylab("Accuracy") +
xlab("Age (years)") +
ylim(c(0, 1)) +
theme(text = element_text(size=14)) +
theme_few() +
scale_color_solarized() +
guides(col=guide_legend(title="Number of features"),
size = guide_legend(title="Number of participants"))
d_rt_ms0 <- d %>%
mutate(sample = as.factor(sample),
age_group_small = as.numeric(as.character(cut(age, seq(2,6,.5),
labels = seq(2,5.5,.5)+.25)))) %>%
group_by(sample, age_group_small, trial_type, item_rel, subid) %>%
summarise(rt = mean(rt))
d_rt0 <- d_rt_ms0 %>%
group_by(age_group_small, trial_type, item_rel) %>%
multi_boot_standard(col = "rt") %>%
mutate(rt = mean) %>%
select(-mean) %>%
ungroup() %>%
left_join(d_acc_ms0 %>%
group_by(age_group_small, trial_type, item_rel) %>%
summarise(n = n()))
ggplot(d_rt0 %>%
mutate(trial_type = fct_recode(trial_type,
"control-single" = "control_single",
"control-double" = "control_double")),
aes(x = age_group_small, y = rt,
group = item_rel, col = item_rel)) +
# geom_line() +
geom_smooth(span= 1, aes(weight = n), se = FALSE) +
# geom_point(aes(size = n), alpha = .5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .1)) +
facet_grid(. ~ trial_type) +
#   guides(colour=guide_legend(title="Number of features")) +
# guides(colour=FALSE) +
ylab("Reaction time (s)") +
xlab("Age (years)") +
theme(text = element_text(size=14)) +
theme_few() +
scale_color_solarized() +
guides(col=guide_legend(title="Number of features"),
size = guide_legend(title="Number of participants"))
d_rt <- d %>%
mutate(sample = as.factor(sample)) %>%
filter(correct == "1") %>%
group_by(sample, age_group, trial_type, item_rel, subid) %>%
summarise(rt = mean(rt)) %>%
group_by(sample, age_group, trial_type, item_rel) %>%
multi_boot_standard(col = "rt") %>%
mutate(rt = mean) %>%
select(-mean)
p2 <- ggplot(d_rt, aes(x = age_group, y = rt, group = interaction(item_rel, sample), col = item_rel, linetype = sample)) +
geom_line() +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .1)) +
facet_grid(. ~ trial_type) +
#   guides(colour=guide_legend(title="Number of features")) +
# guides(colour=FALSE) +
geom_hline(yintercept=.50,lty=4) +
ylab("rt") +
xlab("Age (years)") +
theme(legend.position="bottom",
text = element_text(size=14)) +
theme_few() +
scale_color_solarized()
p2
d_rt_ms <- d %>%
mutate(sample = as.factor(sample),
age_group_small = as.numeric(as.character(cut(age, seq(2,6,.5),
labels = seq(2,5.5,.5)+.25)))) %>%
group_by(sample, age_group_small, trial_type, item_rel, subid) %>%
summarise(rt = mean(rt))
d_rt <- d_rt_ms %>%
group_by(sample, age_group_small, trial_type, item_rel) %>%
multi_boot_standard(col = "rt") %>%
mutate(rt = mean) %>%
select(-mean) %>%
ungroup() %>%
left_join(d_acc_ms %>%
group_by(sample, age_group_small, trial_type, item_rel) %>%
summarise(n = n()))
ggplot(d_rt %>%
mutate(trial_type = fct_recode(trial_type,
"control-single" = "control_single",
"control-double" = "control_double")),
aes(x = age_group_small, y = rt,
group = item_rel, col = item_rel)) +
# geom_line() +
geom_smooth(span= 1, aes(weight = n), se = FALSE) +
# geom_point(aes(size = n), alpha = .5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .1)) +
facet_grid(sample ~ trial_type, labeller = labeller(sample = label_both)) +
#   guides(colour=guide_legend(title="Number of features")) +
# guides(colour=FALSE) +
ylab("Reaction time (s)") +
xlab("Age (years)") +
# scale_color_discrete(name="Number of features") +
# guides(col=guide_legend(title="Number of features")) +
theme_few() +
scale_color_solarized(name="Number of features") +
theme(text = element_text(size=14),
legend.position = "bottom")
ggplot(d_rt %>%
mutate(trial_type = fct_recode(trial_type,
"control-single" = "control_single",
"control-double" = "control_double")),
aes(x = age_group_small, y = rt,
group = interaction(item_rel, sample), col = item_rel, linetype=sample)) +
# geom_line() +
geom_smooth(span= 1, aes(weight = n), se = FALSE) +
# geom_point(aes(size = n), alpha = .5) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .1)) +
facet_grid(. ~ trial_type) +
#   guides(colour=guide_legend(title="Number of features")) +
# guides(colour=FALSE) +
ylab("Reaction time (s)") +
xlab("Age (years)") +
theme(text = element_text(size=14)) +
theme_few() +
scale_color_solarized() +
guides(col=guide_legend(title="Number of features"),
size = guide_legend(title="Number of participants"))
ms <- d %>%
group_by(sample, age_group, trial_type, item_rel, subid) %>%
summarize(correct = mean(correct, na.rm=TRUE))
ttest.acc.2y.sample1 = t.test(filter(ms, age_group == "2" & trial_type == "inference" & sample == "original")$correct, mu=.5)
ttest.acc.2y.sample2 = t.test(filter(ms, age_group == "2" & trial_type == "inference" & sample == "replication")$correct, mu=.5)
ttest.acc.3y.sample1 = t.test(filter(ms, age_group == "3" & trial_type == "inference" & sample == "original")$correct, mu=.5)
ttest.acc.3y.sample2 = t.test(filter(ms, age_group == "3" & trial_type == "inference" & sample == "replication")$correct, mu=.5)
ttest.acc.4y.sample1 = t.test(filter(ms, age_group == "4" & trial_type == "inference" & sample == "original")$correct, mu=.5)
ttest.acc.4y.sample2 = t.test(filter(ms, age_group == "4" & trial_type == "inference" & sample == "replication")$correct, mu=.5)
ttest.acc.5y.sample1 = t.test(filter(ms, age_group == "5" & trial_type == "inference" & sample == "original")$correct, mu=.5)
ttest.acc.2y.fewer.sample1 = t.test(filter(ms, age_group == "2" & trial_type == "inference" & item_rel == "fewer" & sample == "original")$correct, mu=.5)
ttest.acc.2y.more.sample1 = t.test(filter(ms, age_group == "2" & trial_type == "inference" & item_rel == "more" & sample == "original")$correct, mu=.5)
ttest.acc.2y.fewer.sample2 = t.test(filter(ms, age_group == "2" & trial_type == "inference" & item_rel == "fewer" & sample == "replication")$correct, mu=.5)
ttest.acc.2y.more.sample2 = t.test(filter(ms, age_group == "2" & trial_type == "inference" & item_rel == "more" & sample == "replication")$correct, mu=.5)
ttest.acc.2y.fewer.sample1
ttest.acc.2y.more.sample1
ttest.acc.2y.fewer.sample2
ttest.acc.2y.more.sample2
lmer_acc <- glmer(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
correct ~ age * trial_type * item_rel + (1 | sample), family="binomial")
summary(lmer_acc)
lmer_rt <- lmer(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
rt ~ age * trial_type * item_rel + (1|subid) + (1|item) + (1 | sample))
summary(lmer_rt)
# brms_acc <- brm(data=d %>%
#                   mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
#                   mutate(age = scale(age)),
#                 correct ~ age * trial_type * item_rel + (trial_type + item_rel | subid) + (age + trial_type + item_rel | item) + (age + trial_type + item_rel | sample), family="bernoulli")
#
# summary(brms_acc)
brms_rt <- brm(data=d %>%
mutate(trial_type = relevel(trial_type, ref = "control_single")) %>%
mutate(age = scale(age)),
rt ~ age * trial_type * item_rel + (trial_type + item_rel | subid) + (age + trial_type + item_rel | item) + (age + trial_type + item_rel | sample), family="gaussian", iter=3000, control = list(adapt_delta = 0.99, max_treedepth = 15))
library(tidyverse); library(binom); library(langcog)
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
library(tidyverse); library(binom); library(langcog)
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
raw.data.path <- "../experiments/speaker_production/production-results/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.json")
for (file.name in files) {
## these are the two functions that are most meaningful
json_file <- readLines(paste(raw.data.path,file.name,sep=""))
json_file_str = paste(json_file, collapse = "")
json_file_str = gsub(",}", "}", json_file_str)
jso = jsonlite::fromJSON(json_file_str)
jso$answers$data$people <- NULL
jso$answers$data$order <- jso$answers$data$order[1:12]
jso$answers$data$utterance <- NULL
jso$answers$data$state <- jso$answers$data$state[4:15]
jso$answers$data$domain <- jso$answers$data$domain[4:15]
jso$corr <- ifelse(jso$answers$data$judgment[1] == "1" & jso$answers$data$judgment[2] == "0" & jso$answers$data$judgment[3] == "1", 1, 0)
jso$answers$data$judgment <- NULL
jso1 <- data.frame(jso)
jso1$subid <- file.name
## now here's where data get bound together
all.data <- rbind(all.data, jso1)
}
brms_acc
